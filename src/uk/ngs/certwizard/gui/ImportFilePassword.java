/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImportFilePassword.java
 *
 * Created on 29-May-2010, 22:08:49
 */

package uk.ngs.certwizard.gui;

import java.net.URL;
import java.awt.Toolkit;
import java.io.File;

import javax.swing.JOptionPane;

import uk.ngs.ca.certificate.ImportCertificate;

/**
 *
 * @author xw75
 */
public class ImportFilePassword extends javax.swing.JFrame {

    //private char[] PASSPHRASE = null;
    File importFile = null;

    //private MainWindowPanel mainWindowPanel = null;

    private ImportCertificate importCertificate = new ImportCertificate();
    
    /** Creates new form ImportFilePassword */
    public ImportFilePassword( MainWindowPanel mainWindowPanel, char[] passphrase, File file ){
        initComponents();

        //this.mainWindowPanel = mainWindowPanel;
        importCertificate.addObserver(mainWindowPanel);

        //PASSPHRASE = passphrase;
        importFile = file;
        importCertificate.addCertificateFile(file);
        importCertificate.addKeyStorePassphrase(passphrase);
        URL iconURL = ImportFilePassword.class.getResource("/uk/ngs/ca/images/ngs-icon.png");
        if (iconURL != null) {
            this.setIconImage(Toolkit.getDefaultToolkit().getImage(iconURL));
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("File Import");

        jLabel1.setText("Password");

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("<html>Please type in the password that <br>protects the selected file.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        doAction();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void doAction(){
        char[] protectionPassphrase = txtPassword.getPassword();
        importCertificate.addFileProtectionPassphrase(protectionPassphrase);
        boolean isSuccess = importCertificate.importToKeyStore(this);
        if( isSuccess ){
            JOptionPane.showMessageDialog(this, "You have successfully imported the selected certificate in your local certificate keystore.", "Import Certificate Success", JOptionPane.INFORMATION_MESSAGE);
            importCertificate.notifyObserver();
            this.dispose();
        }else{
            //do we need to do importCertificate.notifyObserver()?
            //if we don't call this method, we must make sure that mainwindow will display certs fine.
            this.dispose();
        }
    }

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
        doAction();
    }//GEN-LAST:event_txtPasswordActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables

}
